input {
	# Receive logs from firehose-to-syslog
	tcp {
		add_field => [ "type", "syslog" ]
		host => "127.0.0.1"
		port => "5514"
	}

	# Receive logs from CF collector
	gelf {
                host => "127.0.0.1"
		port => 12201
	}
}

filter {
   # Cleanup collector gelf logs so they don't break downstream parsers
	   if [facility] == "gelf-rb" {
		   mutate {
		     rename => { "tags" => "attributes" }
		     add_field => { "type" => "gelf" }
		     add_tag => "collector"
		   }
	   }
}

<% if 'DEBUG' == p('logstash.metadata_level') %>
	filter {
	    mutate {
	        rename => [ "host", "@ingestor.remote_host" ]

			add_field => [ "@ingestor[service]", "syslog" ]
			add_field => [ "@ingestor[job]", "<%= name %>/<%= index %>" ]
	    }

		ruby {
			code => "event['@ingestor[timestamp]'] = Time.now.iso8601(3)"
		}
	}
<% end %>

output {
	<% if p("ingestor_cloudfoundry-firehose.debug") %>
        stdout {
            codec => "json"
        }
	<% end %>

	<% if_p("ingestor.outputs") do |ingestor_outputs| %>
	  <% ingestor_outputs.each do | output | %>
	    <%= output['plugin'] %> {
              <% if 'redis' == output['plugin'] %>
                <% output['options'] = {
                  "host" => p('redis.host'),
                  "port" => p('redis.port'),
                  "data_type" => "list",
                  "key" => p('redis.key'),
                  "batch" => true,
                  "batch_events" => 50
                } %>
              <% end %>
	      <% output['options'].each do | k, v | %>
	        <%= k %> => <%= v.inspect %>
	      <% end %>
	    }
	  <% end %>
	<% end %>

}
